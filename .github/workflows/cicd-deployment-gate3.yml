# This workflow uses ServiceNow custom actions that are certified by ServiceNow.

name: GitHub CICD workflow with Deployment Gates using JWT

on:
  pull_request:
  workflow_dispatch:

  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [opened, synchronize, reopened]


jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package

  test:
    name: 'Test'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0    
    - name: Run Tests with Maven
      run: mvn -B test --file pom.xml

    - name: ServiceNow DevOps Unit Test Results
    # You may pin to the exact commit or the version.
      uses: ServiceNow/servicenow-devops-test-report@v4.1.0
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance Name
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Job Name
          job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
          # Github Context
          context-github: ${{ toJSON(github) }}
          # JUnit xml report file name with path
          xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
                                                                          # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml

  registerArtifact:
    name: 'Register Artifact'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Artifact
    # You may pin to the exact commit or the version.          
      uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Display Name of the Job
          job-name: 'Register Artifact'
          # Github Context
          context-github: ${{ toJSON(github) }}
          # List of Artifacts to be registered
          artifacts: '[
              {
                  "name": "app-devops-cicd.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'

  sonarScan:
    name: 'Sonar Scan'
    needs: registerArtifact
    runs-on: ubuntu-latest
    steps:
    # - name: Checkout
    #   uses: actions/checkout@v4.0.0
    #   with:
    #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: 17
    #     distribution: 'zulu' # Alternative distribution options are available.
    # - name: Cache SonarCloud packages
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.sonar/cache
    #     key: ${{ runner.os }}-sonar
    #     restore-keys: ${{ runner.os }}-sonar
    # - name: Cache Maven packages
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: ${{ runner.os }}-m2
    # - name: Build and analyze
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}  # Needed to get PR information, if any
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

    - name: ServiceNow DevOps Sonar
    # You may pin to the exact commit or the version.     
      uses: ServiceNow/servicenow-devops-sonar@v3.1.0
      with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'Sonar Scan'
          # Sonar Host URL
          sonar-host-url: ${{ secrets.SONAR_URL }}
          # Sonar Project Key
          sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

  ServiceNowSecurityScanResultsVeracode:
      # jobs that must complete successfully before this job will run
      needs: sonarScan
      # type of machine to run the job on
      runs-on: ubuntu-latest
      name: ServiceNow Security Scan Results
      steps:
        - name: ServiceNow DevOps Security Results
          # You may pin to the exact commit or the version.
          # uses: ServiceNow/servicenow-devops-security-result@26f3416768ffd3991f1a14c0304ba03075724929
          uses: ServiceNow/servicenow-devops-security-result@v3.1.0
          with:
            # ServiceNow Instance URL
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            # Devops Integration User Name
            devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }} # optional
            # Devops Integration User Password
            devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }} # optional
            # Devops Integration Token
            devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }} # optional
            # Github Context
            context-github: ${{ toJSON(github) }}
            # Display Name of the Job
            job-name: 'ServiceNow Security Scan Results'
            # Security Results Attributes: For more information on defining the security attributes, View full Marketplace listing link above
            # security-result-attributes: '{ "scanner": "${{ secrets.SCANNER_NAME_VERACODE }}", "applicationName": "${{ secrets.VULNERABILITY_APPLICATION_NAME }}", "buildVersion": "21 Mar 2023 Static", "securityToolId":"f110c099ff07c65022bcf3d1e34fd9f9" }'
            security-result-attributes: '{ "scanner": "${{ secrets.SCANNER_NAME_VERACODE }}", "applicationName": "${{ secrets.VULNERABILITY_APPLICATION_NAME }}" }'
            # Orchestration Tool Id
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}

  registerPackage:
    name: 'Register Package'
    # needs: [ServiceNowSecurityScanResultsVeracode, ServiceNowSecurityScanResultsCheckmarxSAST, ServiceNowSecurityScanResultsCheckmarxOne]
    needs: [ServiceNowSecurityScanResultsVeracode]
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Package
    # You may pin to the exact commit or the version.           
      uses: ServiceNow/servicenow-devops-register-package@v3.1.0
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id of the tool created in ServiceNow
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # List of Artifacts in JSON format
          artifacts: '[
              {
                  "name": "app-devops-cicd.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'
          # Name of the Package that contains list of artifacts
          package-name: 'app-devops-change-velocity-cicd.war'
          # Display Name of Job
          job-name: 'Register Package'
            
  change:
    # jobs that must complete successfully before this job will run
    needs: registerPackage
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    outputs:
      changeRequestNumber: ${{ steps.create_change.outputs.change-request-number }}
      changeRequestSysId: ${{ steps.create_change.outputs.change-request-sys-id }}
    steps:
      - name: ServiceNow DevOps Change Automation
        id: create_change
        # You may pin to the exact commit or the version.
        # uses: ServiceNow/servicenow-devops-change@373e092812580f05105089c20129e6efe347c8e5
        uses: ServiceNow/servicenow-devops-change@v4.1.0
        with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Devops Integration User Name
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }} # optional
          # Devops Integration User Password
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }} # optional
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }} # optional
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change'
          # Github Context
          context-github: ${{ toJSON(github) }}
          # The max. time in seconds to wait until the action should fail.
          timeout: # optional, default is 3600
          # The time in seconds to wait between trying the API.
          interval: # optional, default is 100
          # The customized inputs to create change with the requested details.
          change-request: '{"attributes":{"chg_model":{"name":"DevOps"}, "requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change management"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "","end_date": ""}}'
          # The max. time in seconds to wait until change created.
          changeCreationTimeOut: # optional, default is 3600
          # This value will be used to resume or abort the pipeline if the change is not created within the mentioned time period in changeCreationTimeOut. 
          abortOnChangeCreationFailure: # optional, default is true
          # This value will be used to resume or abort the pipeline after a timeout has occurred in case a change step is still in a pending state.
          abortOnChangeStepTimeout: # optional, default is true
          # The customized inputs to process deployment gate job related change.
          deployment-gate: '{"environment":"rama_deployment_gate","jobName":"ServiceNow DevOps Get Change"}' # optional

      - name: Output of ServiceNow DevOps Change Automation
        run: |
          echo 'Output of ServiceNow DevOps Change Automation is change-request-number = ${{ steps.create_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT
          echo 'Output of ServiceNow DevOps Change Automation is change-request-sys-id = ${{ steps.create_change.outputs.change-request-sys-id }}' >> $GITHUB_OUTPUT   

      - name: Sleep for 60 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'          

  getChange:
    # jobs that must complete successfully before this job will run
    needs: change
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Get Change'
    environment: rama_deployment_gate
    outputs:
      changeRequestNumber: ${{ steps.get_change.outputs.change-request-number }}
    steps:
      - name: ServiceNow DevOps Get Change
        id: get_change
        # You may pin to the exact commit or the version.
        # uses: ServiceNow/servicenow-devops-get-change@38d27ed6413d88e7b7fa9a7db248a2caaaf09596
        uses: ServiceNow/servicenow-devops-get-change@v4.1.0
        with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # # Devops Integration User Name
          # devops-integration-user-name: # optional
          # # Devops Integration User Password
          # devops-integration-user-password: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # The inputs to identify change at Servicenow and GET it.
          #change-details: '{"build_number":"${{ github.run_id }}","pipeline_name":"${{ github.repository }}/${{ github.workflow }}","stage_name":"ServiceNow DevOps Change Automation", "attempt_number": ""}'
          change-details: '{"build_number":"","pipeline_name":"${{ github.repository }}/${{ github.workflow }}","stage_name":"ServiceNow DevOps Change", "attempt_number": ""}'
        
      - name: Output of ServiceNow DevOps Get Change
        run: |
          echo 'Output of ServiceNow DevOps Get Change Automation is change-request-number = ${{ steps.get_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT           
          
  updateChange:
    # jobs that must complete successfully before this job will run
    needs: [change, getChange]
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Update Change'
    steps:
      - name: ServiceNow DevOps Update Change
        # You may pin to the exact commit or the version.
        # uses: ServiceNow/servicenow-devops-update-change@d7abfe557487fe1122e138eab6dae709df1e7780
        uses: ServiceNow/servicenow-devops-update-change@v3.1.0
        with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # ServiceNow Devops security token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Orchestration Tool Id of the tool created in ServiceNow
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # # Devops Integration User Name
          # devops-integration-user-name: # optional
          # # Devops Integration User Password
          # devops-integration-user-password: # optional
          # Github Context
          context-github: ${{ toJSON(github) }}
          # Change Request Number to be Updated
          change-request-number: ${{ needs.change.outputs.changeRequestNumber }}
          #change-request-number: ${{ needs.getChange.outputs.changeRequestNumber }}
          # The customized inputs to create change with the requested details.
          change-request-details: '{ "short_description":"Updated short_description abcdefghijklmnopqrstuvwxyz" }'

  deploy:
    name: 'Deploy'
    needs: updateChange
    runs-on: ubuntu-latest
    steps:
    - name: Run deployment scripts
      run: echo 'Deployment step in progress...'
